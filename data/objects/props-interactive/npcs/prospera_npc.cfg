{
id: "prospera_npc",
prototype: ["walking_npc"],
always_active: true,
solid_dimensions: ["npc"],
solid_area: [18,24,38,50],

properties: {
	item_presentation_offset: "{x: int, y: int} :: {x: -34, y: -50 }",

	turn_around: "commands :: if(can_turn,
		[
			/*
				Most of this function is cloned from the standing_npc version.  The main reason we have this is that prospera's actual turn animation is meant to provide a visual tween between her walk animations, in which she's facing directly to the side.   During her stand animation, she is, instead, facing mostly towards the screen (perhaps 15Â° away).   So basically, if she's standng, we just want to skip the animation entirely.
			*/
			if(_is_walking,
				if('turn' in available_animations, animation('turn')),
			),
			set(facing, -facing),
			set(_last_turned, level.cycle),
		],
		change_to_stand_anim
	)",
},


on_end_emote_talk_anim: "animation('stand')",
on_end_emote_annoyed_anim: "animation('stand')",
on_end_emote_surprised_anim: "animation('emote_surprised2')",
on_end_emote_surprised2_anim: "animation('emote_surprised3')",
on_end_emote_surprised3_anim: "animation('stand')",

on_decap: "play_sound__falloff('hat-take-off')",
on_recap: "play_sound__falloff('hat-put-on')",
on_uncross: "play_sound__falloff('uncross')",
on_cross: "play_sound__falloff('cross')",

on_end_emote_emphatic_anim: "animation('stand')",

on_end_emote_talk_with_hat_off_anim: "animation('emote_stand_with_hat_off')",
on_end_emote_stand_with_hat_off_anim: "animation('emote_stand_with_hat_off')",
on_end_emote_remove_hat_anim: "animation('emote_stand_with_hat_off')",
on_end_emote_restore_hat_anim: "animation('stand')",

on_end_emote_talk_with_arms_crossed_anim: "animation('emote_stand_with_arms_crossed')",
on_emote_stand_with_arms_crossed_anim: "animation('emote_stand_with_arms_crossed')",
on_end_emote_cross_arms_anim: "animation('emote_stand_with_arms_crossed')",
on_end_emote_uncross_arms_anim: "animation('stand')",

	#-------------------------- item animations --------------------------#
on_end_item_get_begin_anim: "animation('item_get_hold')",
on_end_item_get_hold_anim: "animation('item_get_hold')",
on_end_item_get_end_anim: "animation('stand')",




animation: [
	{
		"@base": true,
		image: "npc/prospera.png",
		pad: 0,
		accel_y: 80,
		accel_x: 0,
		interact_area: "all",
	},

#-------------------------- core/movement animations --------------------------#
	{
		id: "stand",
		rect: [0,248,59,307],
		duration: 5,
		frames: 10,
		frames_per_row: 5,
	},
	{
		accel_x: 500,
		id: "walk",
		rect: [0,63,59,122],
		duration: 5,
		frames: 10,
		frames_per_row: 5,
	},
	{
		id: "turn",
		rect: [0,186,59,245],
		duration: 5,
		frames: 3,
	},

#-------------------------- cinematic/item/victory animations --------------------------#
	{
		image: "npc/prospera3.png",
		id: "item_get_begin",
		rect: [0,71,59,130],
		frames: 6,
		duration: 8,
	},{
		image: "npc/prospera3.png",
		id: "item_get_hold",
		rect: [300,71,359,130],
		frames: 1,
		duration: 36,
	},{
		image: "npc/prospera3.png",
		id: "item_get_end",
		rect: [0,71,59,130],
		frames: 6,
		duration: 8,
		play_backwards: true,
	},



#-------------------------- emote animations --------------------------#
	{
		image: "npc/prospera2.png",
		id: "emote_talk",
		rect: [0,272,59,331],
		duration: 6,
		frames: 16,
		frames_per_row: 4,
	},
	{
		image: "npc/prospera2.png",
		id: "emote_annoyed",
		rect: [0,0,59,59],
		duration: 6,
		frames: 9,
		frames_per_row: 3,
	},
	{
		image: "npc/prospera3.png",
		id: "emote_emphatic",
		rect: [0,0,59,59],
		duration: 6,
		frames: 7,
		reverse: true,
	},


	{
		image: "npc/prospera2.png",
		id: "emote_surprised",
		rect: [272,272,331,331],
		duration: 6,
		frames: 12,
		frames_per_row: 4,
	},
	{
		image: "npc/prospera2.png",
		id: "emote_surprised2",
		rect: [272,452,331,511],
		duration: 20,
		frames: 1,
	},
	{
		image: "npc/prospera2.png",
		id: "emote_surprised3",
		rect: [332,452,391,511],
		duration: 9,
		frames: 3,
	},


	{
		image: "npc/prospera2.png",
		id: "emote_remove_hat",
		rect: [212,0,271,59],
		events:"30:decap,",
		duration: 6,
		frames: 15,
		frames_per_row: 5,
	},
	{
		image: "npc/prospera2.png",
		id: "emote_restore_hat",
		rect: [212,0,271,59],
		events:"60:recap,",
		duration: 6,
		frames: 15,
		frames_per_row: 5,
		play_backwards: true,
	},
	{
		image: "npc/prospera3.png",
		id: "emote_stand_with_hat_off",
		rect: [0,180,59,239],
		duration: 6,
		frames: 5,
		reverse: true,
	},
	{
		image: "npc/prospera3.png",
		id: "emote_talk_with_hat_off",
		rect: [272,392,331,451],
		duration: 6,
		frames: 8,
		frames_per_row: 4,
	},


	{
		image: "npc/prospera2.png",
		id: "emote_cross_arms",
		rect: [0,572,59,631],
		events:"30:cross,",
		duration: 6,
		frames: 9,
		frames_per_row: 3,
	},
	{
		image: "npc/prospera2.png",
		id: "emote_uncross_arms",
		rect: [0,572,59,631],
		events:"24:uncross,",
		duration: 6,
		frames: 9,
		frames_per_row: 3,
		play_backwards: true,
	},
	{
		image: "npc/prospera2.png",
		id: "emote_stand_with_arms_crossed",
		rect: [272,572,331,631],
		duration: 6,
		frames: 8,
		frames_per_row: 4,
	},
	{
		image: "npc/prospera3.png",
		id: "emote_talk_with_arms_crossed",
		rect: [0,272,59,331],
		duration: 6,
		frames: 16,
		frames_per_row: 4,
	},




],

object_type: [
	{
		id: "magic_spell_projectile",
		prototype: ["transient_object"],
		always_active: true,
		is_strict: true,
		zorder: "@include data/zorder.cfg:in_front_of_everything",

		properties: {
			prior_y_pos: { type:"decimal", default: 0 },
			prior_x_pos: { type:"decimal", default: 0 },
			faux_velocity_x: { type:"decimal", default: 0 },
			faux_velocity_y: { type:"decimal", default: 0 },


			my_particles: {
				type: "obj legacy_particle_attache",
				init: "object('legacy_particle_attache', mid_x, mid_y, {
					_particle_type: 'prospera_spell_contrail',
					parent: me,
					time_to_die: 50,
				})",
				persistent: false,
				variable_name: 'my_particles',
			},
		},

		on_process: "[
						set(prior_x_pos, mid_x),
						set(prior_y_pos, mid_y),
						set(rotate, my_angle_of_motion)
					]
					
				where my_angle_of_motion = atan2( faux_velocity_y, faux_velocity_x )
				where faux_velocity_x = mid_x - prior_x_pos
				where faux_velocity_y = mid_y - prior_y_pos
				",

		on_create: "add_object(my_particles)",
		on_end_anim: "animation(animation)",

		animation: {
			id: "normal",
			image: "npc/prospera-spell2.png",
			rect: [0,0,19,19],
			feet_x: 10,
			feet_y: 10,
			pad: 0,
			accel_y: 0,
			accel_x: 0,
			frames: 8,
			frames_per_row: 4,
			duration: 3,
			scale: 3,
		},
		
		
	},	
	{
		id: "magic_spell_burst",
		
		properties: {
			be_huge: { type: "bool", default: false },
		},
		
		on_create: "[
			if(be_huge,
				[
					set(scale, 3.0),
					set(rotate, 1d360)
				],[
					set(scale, 0.5 + (1d50/100.0)),
					set(rotate, 1d360),
					set(red,150+1d150),
					set(green,150+1d150),
					set(blue,150+1d150)
				]
			),
			animate(me,
				{
					alpha: 0,
				},{
					duration: (8*2),
					easing: lib.math.ease_in_cubic
				})
		]",
		
		on_end_anim: "die()",
		
		animation: {
			id: "normal",
			no_remove_alpha_borders: true,
			image: "effects/light-flash.png",
			rect: [0,0,121,121],
			frames: 8,
			frames_per_row: 4,
			pad: 0,
			duration: 2,
			blend:["src_alpha","dst_alpha"],
		},
	},
	{
		id: "magic_spell_aftermath",
		prototype: ["transient_object"],
		always_active: true,
		is_strict: true,
		zorder: "@include data/zorder.cfg:in_front_of_everything",

		properties: {
			pop_star: "def(int index) -> commands spawn('star_particle',mid_x,mid_y, {velocity_x: vel.x, velocity_y: vel.y})
		
					where vel = polar_to_cartesian(spawn_angle, 1d200+100)
					where spawn_angle = 120*index + 1d90",
		
			polar_to_cartesian:  "def(decimal angle, decimal mag) -> {x: decimal, y: decimal} {x:  mag * cos(angle), y: mag * sin(angle) }",
		
			my_particles: {
				type: "obj legacy_particle_attache",
				init: "object('legacy_particle_attache', mid_x, mid_y, {
					_particle_type: 'prospera_spell_aftermath',
					parent: me,
					time_to_die: 50
				})",
				persistent: false,
				variable_name: 'my_particles',
			},
		},

		on_create: "[
						add_object(my_particles),
						map(range(1000/50), schedule(50*value + 1d20, pop_star(index))),
		
						schedule(death_time - 50, ; my_particles.turn_off ),
						schedule(death_time, die())
					]
						where death_time = 1000",

		animation: {
			id: "normal",
			image: "npc/prospera-spell.png",
			rect: [0,0,1,1],
			pad: 0,
			accel_y: 0,
			accel_x: 0,
		},
		
		
	}]
}
