{
	id: "fireplace",
	collide_dimensions: [],
	is_strict: true,
	activation_border: 500,
	prototype: ["triggerable"],
	platform_area: [9,11,70,12],

	editor_info: {
		category: "decor, seaside",
	},


	properties: {
		material_sound: "enum wood_solid",
	
		ignite: "execute(me, [
			animation('burn'),
			set(is_burning, true),
			fire_particles.turn_on,
			sfx.turn_on,
			add_object(lighting),
		])",
		extinguish: "execute(me, [
			animation('normal'),
			set(is_burning, false),
			fire_particles.turn_off,
			sfx.turn_off,
			remove_object(lighting),
		])",

	#-------------------------- triggerable overrides --------------------------#
		trigger_on: "commands :: ignite",
		trigger_off: "commands :: extinguish",

	#-------------------------- vars --------------------------#
		is_burning: { type: "bool", editor_info: { type: "boolean", value: "true" } },
		_is_burning__internal: "if(event = '', is_burning, bool(event_status))",

	
		sfx: {
			type: "obj sound_source_individual_attache",
			init: "object('sound_source_individual_attache', mid_x, mid_y, {
				parent: me,
				sound_file:'ambient/fireplace.ogg',
				starts_with_sound_on: false,
				variable_name: 'sfx',
			})",
			persistent: false,
		},

		fire_particles: {
			type: "obj legacy_particle_attache",
			init: "object('legacy_particle_attache', mid_x, mid_y, {
				_particle_type: 'bonfire',
				zorder: me.zorder + 1,
				parent: me,
				time_to_die: 200,
				custom_relative_pos_default: {mid_x: 0, mid_y: 5},
				customized_spawn_rects: [{
					particle_id: '3_fire_bright',
					rect: [-40, 40, -8, 8],
				},{
					particle_id: '2_fire_med',
					rect: [-40, 40, -10, 10],
				},{
					particle_id: '1_fire_sparks',
					rect: [-40, 40, -20, 20],
				}],

				customized_spawn_rates: [{
					particle_id: '3_fire_bright',
					magnitude: 500,
				},{
					particle_id: '2_fire_med',
					magnitude: 1000,
				},{
					particle_id: '1_fire_sparks',
					magnitude: 200,
				}],
				variable_name: 'fire_particles',
			})",
			persistent: false,
		},

		lighting: {
			type: "obj effects_attache_glow_source",
			init: "object('effects_attache_glow_source', mid_x, mid_y, {
				time_to_die: 0,
				parent: me,
				custom_relative_pos_default: {mid_x: 0,	mid_y: 4},
				base_alpha: 160,
				flicker_type: enum sputter,
				graphics: enum firey,
				scale_factor: 1.40,
				zorder: me.zorder,
				variable_name: 'lighting',
			})",
			persistent: false,
		},
	#-------------------------- constructor/destructor --------------------------#
		triggerable_obj_constructor: "commands :: [
			set(sfx.starts_with_sound_on, _is_burning__internal)
			;
			add_object(sfx),
			add_object(fire_particles)
			;
			if(_is_burning__internal, ignite, extinguish)
		]",
	},
	
	on_end_noninteractive_anim: "animation('noninteractive')",
	on_end_normal_anim: "animation('normal')",
	on_end_burn_anim: "[animation('burn'), set(time_in_animation,1d10)]",
	
}
