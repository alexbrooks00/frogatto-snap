{
id: "acid_controller",
prototype: ["liquid"],
zorder: "@include data/zorder.cfg:liquid_particle_effects",

properties: {
#-------------------------- liquid-specific settings --------------------------#
	liquid_texture: "string :: 'liquids/toxic-acid.png'",
	
	add_water_effect: "add_water(_x_bound, _y_bound, _x2_bound, _y2_bound, [70, 0, 70, 50])",

	liquid_damage: "if(higher_difficulty, 2,1)",
	damage_type: "enum acid",
	
	
	
	
	
#-------------------------- fx objects --------------------------#
	//Surface bubbles can float left or right. We can't set up one emitter to do this, so we just use two and switch the emitter direction.
	acid_surface_bubbles: { 
		type: "obj particle_attache", 
		init: "object('particle_attache', x,y, {
			_particle_type:'acid_surface_bubbles', //Silence check for this existing. `particles`, which this sets, is overwritten later.
			parent: me,
			time_to_die: 0,
			x:x, y:y,
			zorder: lib.zorder.get('interior_back_wall_decor'),
		})",
		persistent: false,
	},

	underlay_obj: {
		type: "obj acid_controller.underlay",
		init: "object('acid_controller.underlay', mid_x, mid_y, {
				parent: me,
				time_to_die: 50,
			})",
		persistent: false,
	},
	top_obj: {
		type: "obj acid_controller.top",
		init: "object('acid_controller.top', mid_x, mid_y, {
				parent: me,
				time_to_die: 50,
			})",
		persistent: false,
	},

	_sfx: { type: "obj sound_source_area", init: "object('sound_source_area', mid_x, mid_y,{ sound_file:'ambient/acid.ogg', _x_bound:0, _x2_bound:0, _y_bound:0, _y2_bound:0})", persistent: false },


#-------------------------- constructors --------------------------#
	liquid_obj_constructor: "commands :: [
		add_particle_effect ;
		setup_particles ;
		[
			setup_shader,
			add_object(underlay_obj),
			add_object(top_obj),

			set(_sfx._x_bound, _x_bound), set(_sfx._x2_bound, _x2_bound), set(_sfx._y_bound, _y_bound), set(_sfx._y2_bound, _y2_bound), 
			add_object(_sfx),
		]
	]",

	add_particle_effect: "[
		add_object(acid_surface_bubbles),
		add_particles('bubbles'),
		add_particles('fizz'),
	]",

	setup_particles: "[
		set(particle_systems['bubbles'].area, [_x_bound, _y_bound, _x2_bound, _y2_bound]),
		set(particle_systems['fizz'].min_x, _x_bound - x),
		set(particle_systems['fizz'].max_x, _x2_bound - x),
		set(particle_systems['fizz'].min_y, (_y_bound - 15) - y),
		set(particle_systems['fizz'].max_y, (_y_bound + 15) - y),
		set(particle_systems['fizz'].spawn_rate, 2*(_x2_bound - _x_bound)),
	
		set(acid_surface_bubbles.particles, (
			raw_particle_system_info + {
				position: [
					(_x_bound + _x2_bound)/2 - mid_x, //Horizontal offset of particle system as wide as the water, to handle when the emitter object isn't square within the bounds of the water.
					-(_y_bound - mid_y - 3 - 9), //Position the center point (of the box emitter) at the top of the body of water. Less 4px to float on top of water surface.
					0
				],
				emitter: (map <- raw_particle_system_info.emitter) + {
					box_width: _x2_bound - _x_bound - 64*2, //Make the bubbles as wide as the water. (To position the bubbles, see `position` above.) Less 64px for fade in/out margins.
					box_height: 18, //Make the bubbles as tall as the surface strip of water.
					emission_rate: (map <- (map <- raw_particle_system_info.emitter).emission_rate) + {
						max: (_x2_bound - _x_bound) / 125, //Particle density. (Particles per pixel of water surface, divided by 2 on average because random floor is 0.)
					}
				},
			} where
				raw_particle_system_info = 
					(ParticleSystemInfo <- get_document('data/particles/acid_surface_bubbles.cfg')).info
		)),
	]",
},


on_editor_changed_variable: "[
	
	proto_event('liquid', 'editor_changed_variable'),
]",


animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 147, y: 102, w: 28, h: 28,
	frames: 1,
	duration: 1000,
},

particle_system: [
	{
		id: "bubbles",
		type: "water",
		number_of_particles: 100,
		repeat_period: 200,
		velocity_y: -1,
		velocity_x: 0,
		velocity_rand: 4,
		dot_size: 2,
		color: [120,250,200,200],
	},
	{
		id: "fizz",
		type: "simple",
		spawn_rate: 600,
		time_to_live: 80,
		min_x: -60,
		max_x: 260,
		min_y: -15,
		max_y: 15,
		velocity_y: -200,
		velocity_x: 260,
		velocity_x_random: 200,
		velocity_y_random: 400,
		accel_y: -10,
		delta_a: 2,
		animation: {
			id: "sparkle",
			image: "effects/particles.png",
			rect: [3,93,9,99],
			pad: 3,
			frames: 5,
			frames_per_row: 5,
			scale: 2,
			duration: 8,
		},
	},
],



object_type: [
	{
		id: "underlay",
		prototype: ["effects_attache"],
		zorder: "@include data/zorder.cfg:background_parallax_walls_further",
		properties: {
			
			do_setup: "[
				set(x, _parent_obj._x_bound),
				set(y, _parent_obj._y_bound),
				set(draw_area, [
					0, 
					_offset, 
					abs(_parent_obj._x2_bound-_parent_obj._x_bound)/2, 
					abs(_parent_obj._y2_bound-_parent_obj._y_bound)/2
				]),
			] asserting _parent_obj is obj liquid",
			
			handle_specialized_processing: "[
				add(_offset,-0.2),
				do_setup,
			]",
			
		#-------------------------- vars --------------------------#
			_offset: { type: "decimal", default: 0, persistent: false },
		},


		#we don't want to compile the image since we rely on it tiling.
		no_compile_image: "liquids/toxic-acid-bg.png",
		animation: {
			image: "liquids/toxic-acid-bg.png",
			id: "normal",
			x: 0,
			w: 256,
			y: 0,
			h: 256,
		},
	},
	{
		id: "top",
		prototype: ["effects_attache"],
		zorder: "@include data/zorder.cfg:exterior_near_background",
		properties: {
			
			do_setup: "[
				set(x, _parent_obj._x_bound),
				set(y, _parent_obj._y_bound - 20),
				set(draw_area, [
					5.0*sin(_offset), 
					0, 
					abs(_parent_obj._x2_bound-_parent_obj._x_bound)/2, 
					img_h/2
				])
			] asserting _parent_obj is obj liquid",
			
			handle_specialized_processing: "[
				add(_offset,1.5),
				do_setup,
			]",

		#-------------------------- vars --------------------------#
			_offset: { type: "decimal", default: 0, persistent: false },
		},


		#we don't want to compile the image since we rely on it tiling.
		no_compile_image: "liquids/toxic-acid-top.png",
		animation: {
			image: "liquids/toxic-acid-top.png",
			id: "normal",
			x: 0,
			w: 128,
			y: 0,
			h: 16,
		},
	},
],
}
