{
id: "cross_level_cutscene_self_trigger",
hidden_in_game: true,
zorder: "@include data/zorder.cfg:in_front_of_everything",
prototype: ["pullable"],

/*
	This object is very similar to cross_level_cutscene_initiator.
	
	The primary difference is that the "initiator" is meant to be triggered indirectly (and indeed is a child of the `triggerable` prototype).  It's meant to have a button or a lever or whatnot be the thing that sets it off.   This, on the other hand, is invisible and simply triggers such an event the moment you bump into it.
	
	Because this doesn't have a `pullable` source kicking it off (and setting the event), we've chosen to make this, itself, BE the pullable source.
*/

properties: {
#-------------------------- vars --------------------------#
	_last_triggered: { type: "int", default: -400, persistent: false },

	_x_bound: { type: "int", editor_info: { type: "x", value: "x-100" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "x+150" } },
	_y_bound: { type: "int", editor_info: { type: "y", value: "y-100" } },
	_y2_bound: { type: "int", editor_info: { type: "y", value: "y+150" } },
	
	_cutscene_level: { type: "string|null", default: null },
	_cutscene_trigger_label: { type: "string", default: null, dynamic_initialization: true },
	
	event_is_irreversible: "bool :: true",
	
	statefully_turn_on: "commands :: schedule(20,[
							spawn_player('invisible_observer', level.player.mid_x, level.player.mid_y, 1, 
								[
									set(child._player, level.player),
									set(child._post_cutscene_object, me.label),
									set(child._post_cutscene_level, level.id),
									set(child._cutscene_trigger_label, _cutscene_trigger_label),
								]
							),
							teleport(_cutscene_level,_cutscene_trigger_label,'instant'),
							screen_flash([0,0,0,255], [0,0,0,-5], 50)
						])",
	statefully_turn_off: "commands :: []",


	player_is_speaking_to_someone: "if(level.player is obj frogatto_playable,
		level.player.currently_speaking_to != null,
		false
	)",
},

on_process: "if(
	level.player.mid_x > _x_bound and
	level.player.mid_x < _x2_bound and
	level.player.mid_y > _y_bound and
	level.player.mid_y < _y2_bound and
	cycle - _last_triggered > 250 and
	(not player_is_speaking_to_someone),
	[
		fire_event('triggered'),
		set(_last_triggered,cycle)
	]
)",

on_triggered: "do_toggle",




editor_info: {
	category: "controllers",
},

animation: [{
	"@base": true,
	image: "effects/particles.png",
	x: 86, y: 73, w: 28, h: 28,
	duration: -1,
},{
	id: "normal",
},
{
	id: "pushed",
}],
}
